name: Release

env:
  NUGET_API_KEY: ${{secrets.NUGET_API_KEY}}

on:
  push:
    branches:
      - sitko-package

jobs:
  publish-and-deploy:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'sitkoru'

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.300

      - name: Setup .NET Core 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100

      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: 'Get Last Release'
        id: previoustag
        run: |
          LAST_VERSION=$(wget --no-check-certificate -qO- https://api.github.com/repos/ant-design-blazor/ant-design-blazor/tags | grep 'name' | cut -d\" -f4 | head -1)
          echo "Last Version: ${LAST_VERSION}"
          echo "::set-output name=previous_tag::${LAST_VERSION}"

      - name: 'Get Next Semantic Version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.previous_tag }}

      - name: 'Get Next Version'
        id: get_next_version
        run: |
          current_branch=$(git symbolic-ref --short -q HEAD)
          echo Current git branch is $current_branch
          next_version=''
          if [ "$current_branch" == 'master' ] ; 
            then
              next_version=$patch_version
            else
              next_version=$minor_version
          fi
          echo Will release version $next_version for branch $current_branch
          echo "::set-output name=next_version::${next_version}"
          echo "::set-output name=current_branch::${current_branch}"
        env:
          patch_version: ${{ steps.semvers.outputs.patch }}
          minor_version: ${{ steps.semvers.outputs.minor }}

      - name: Package Nuget üì¶
        id: pack
        run: |
          FULL_VERSION=$next_version-nightly-`date "+%y%m%d%H%M"`
          echo "Version: ${FULL_VERSION}"
          echo "::set-output name=package_version::${FULL_VERSION}"
          dotnet pack components/AntDesign.csproj /p:PackageVersion=${FULL_VERSION} -c Release -o publish
        env:
          next_version: ${{ steps.get_next_version.outputs.next_version }}

      - name: Push to Nuget
        run: dotnet nuget push ./publish/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.MYGET_API_KEY }} --skip-duplicate

